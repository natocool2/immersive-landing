#!/bin/bash

# Script de Configura√ß√£o do Token GitHub
# =======================================

echo "üîê Configura√ß√£o do Token GitHub para Auto-Sync"
echo "=============================================="
echo ""
echo "üìã Instru√ß√µes:"
echo "1. V√° para: https://github.com/settings/tokens"
echo "2. Crie um token com permiss√µes: repo, workflow"
echo "3. O token come√ßa com: ghp_xxxxxxxxxxxxx"
echo ""

# Solicitar o token
read -p "Cole seu token GitHub aqui: " GITHUB_TOKEN

if [ -z "$GITHUB_TOKEN" ]; then
    echo "‚ùå Token n√£o pode estar vazio!"
    exit 1
fi

# Verificar se o token tem o formato correto
if [[ ! "$GITHUB_TOKEN" =~ ^ghp_ ]]; then
    echo "‚ö†Ô∏è  Aviso: Token geralmente come√ßa com 'ghp_'"
    read -p "Deseja continuar mesmo assim? (s/n): " confirm
    if [ "$confirm" != "s" ]; then
        exit 1
    fi
fi

# Configurar o Git remote
echo ""
echo "üîß Configurando Git remote..."
cd /srv/www/domains/easynetpro.com/main/frontend
git remote set-url origin https://natocool2:${GITHUB_TOKEN}@github.com/natocool2/immersive-landing.git

# Testar a conex√£o
echo "üß™ Testando conex√£o..."
if git ls-remote origin &>/dev/null; then
    echo "‚úÖ Conex√£o com GitHub estabelecida com sucesso!"
    
    # Salvar token em arquivo seguro
    echo "GITHUB_TOKEN=${GITHUB_TOKEN}" > /srv/www/domains/easynetpro.com/main/frontend/.env.github
    chmod 600 /srv/www/domains/easynetpro.com/main/frontend/.env.github
    echo "‚úÖ Token salvo com seguran√ßa!"
    
    echo ""
    echo "üéâ Configura√ß√£o conclu√≠da!"
    echo ""
    echo "Pr√≥ximos passos:"
    echo "1. Iniciar sync autom√°tico:"
    echo "   sudo systemctl start easynet-autosync"
    echo ""
    echo "2. Verificar status:"
    echo "   sudo systemctl status easynet-autosync"
    echo ""
    echo "3. Ver logs em tempo real:"
    echo "   sudo journalctl -u easynet-autosync -f"
else
    echo "‚ùå Falha na conex√£o com GitHub!"
    echo "Verifique se o token est√° correto e tem as permiss√µes necess√°rias."
    exit 1
fi
